const m=function(){const r=typeof document<"u"&&document.createElement("link").relList;return r&&r.supports&&r.supports("modulepreload")?"modulepreload":"preload"}(),f=function(r){return"/"+r},c={},p=function(r,i,h){let l=Promise.resolve();if(i&&i.length>0){document.getElementsByTagName("link");const e=document.querySelector("meta[property=csp-nonce]"),o=(e==null?void 0:e.nonce)||(e==null?void 0:e.getAttribute("nonce"));l=Promise.all(i.map(t=>{if(t=f(t),t in c)return;c[t]=!0;const s=t.endsWith(".css"),u=s?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${t}"]${u}`))return;const n=document.createElement("link");if(n.rel=s?"stylesheet":m,s||(n.as="script",n.crossOrigin=""),n.href=t,o&&n.setAttribute("nonce",o),document.head.appendChild(n),s)return new Promise((a,d)=>{n.addEventListener("load",a),n.addEventListener("error",()=>d(new Error(`Unable to preload CSS for ${t}`)))})}))}return l.then(()=>r()).catch(e=>{const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=e,window.dispatchEvent(o),!o.defaultPrevented)throw e})};export{p as _};
