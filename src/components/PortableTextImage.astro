---
// ./src/components/PortableTextImage.astro
import { Image } from "astro:assets";
import { urlForImage } from "../sanitymonicadisneysite/lib/urlForImage";

interface Props {
	type?: "thumbnail" | "in-article";
	class?: string;
	node?: any;
	imageInput?: any;
}

const node = Astro.props.node || Astro.props.imageInput;
const textStyleClass = Astro.props.class;
const imageType = Astro.props.type || "in-article";

const imageURL = urlForImage(node.asset);

/* This section creates a conditional if a width is set. For thumbnails, this setup allows an image to be smaller but Sanity will still call in a higher resolution photo. For in-article, the width and image resolution will be as set in the editor itself. */
let lowestWidth = node.width > 600 && imageType === "thumbnail" ? node.width : 600;

let imageSrc = null;
if (node.width) {
	imageSrc = imageURL.width(node.width).url();
} else {
	imageSrc = imageURL.url();
}

let webpUrl = null;
if (node.width) {
	webpUrl = imageURL.width(lowestWidth).format("webp").url();
} else {
	webpUrl = imageURL.format("webp").url();
}
// end of image resolution and width setup

// This is needed because for the live editor, there is a zero-width-space at the end of the alt text
let getAlignment: "flex-start" | "center" | "flex-end" = node.alignment || "flex-start";

if (node?.alignment?.includes("center")) {
	getAlignment = "center";
} else if (node?.alignment?.includes("end")) {
	getAlignment = "flex-end";
}
// end of note

const doTransition = node.headTransitionName
	? {
			transition: "main-image-transition" + node.headTransitionName,
		}
	: {};
---

<picture class='flex' style={{ justifyContent: getAlignment }}>
	<source srcset={webpUrl} type='image/webp' />
	<Image class='responsive__img' src={imageSrc} alt={node.alt || "Alt image"} title={node.title} inferSize class={textStyleClass} {...doTransition} />
</picture>
